ExpansionTile(
  title: Text(
    'Sites', // You can replace this with any title you want
    style: AppTypography.titleMedium.copyWith(fontWeight: FontWeight.bold),
  ),
  children: [
    Obx(() {
      if (controller.sitesList.isEmpty) {
        return const Padding(
          padding: EdgeInsets.all(8.0),
          child: Center(child: Text('No sites available.')),
        );
      }
      return ListView.builder(
        scrollDirection: Axis.horizontal, // Enable horizontal scrolling
        shrinkWrap: true, // To prevent the ListView from taking up infinite space
        itemCount: controller.sitesList.length,
        itemBuilder: (context, index) {
          final site = controller.sitesList[index];
          return Card(
            margin: const EdgeInsets.all(8),
            child: Container(
              width: 150, // Set width of the card
              height: 130, // Set height of the card
              padding: const EdgeInsets.all(8), // Padding inside the card
              child: Column(
                children: [
                  ClipRRect(
                    borderRadius: BorderRadius.circular(10),
                    child: site.imageUrl?.isNotEmpty == true
                        ? Image.network(
                            site.imageUrl!,
                            width: 130, // Image width
                            height: 100, // Image height
                            fit: BoxFit.cover,
                          )
                        : Container(
                            width: 130,
                            height: 100,
                            color: Colors.grey,
                            child: const Icon(
                              Icons.image,
                              color: Colors.white,
                              size: 60,
                            ),
                          ),
                  ),
                  const SizedBox(height: 8),
                  Text(
                    site.name ?? 'Unknown Site',
                    style: AppTypography.titleMedium.copyWith(fontWeight: FontWeight.bold),
                    maxLines: 1,
                    overflow: TextOverflow.ellipsis,
                  ),
                  Text(
                    site.description ?? 'Unknown Site',
                    style: AppTypography.labelMedium.copyWith(color: AppColors.greyColor),
                    maxLines: 1,
                    overflow: TextOverflow.ellipsis,
                  ),
                  const Icon(
                    Icons.location_on,
                    color: AppColors.greyColor,
                    size: 18,
                  ),
                  const SizedBox(width: 4),
                  Expanded(
                    child: Text(
                      site.address,
                      style: AppTypography.labelMedium.copyWith(color: AppColors.greyColor),
                      maxLines: 1,
                      overflow: TextOverflow.ellipsis,
                    ),
                  ),
                ],
              ),
            ),
          );
        },
      );
    }),
  ],
  initiallyExpanded: false, // You can set this to true if you want it expanded initially
);

SlidingUpPanel(
                              borderRadius: const BorderRadius.only(
                                topLeft: Radius.circular(20),
                                topRight: Radius.circular(20),
                              ),
                              minHeight: 150, // Minimum height of the panel
                              maxHeight: 350, // Maximum height of the panel
                              panelBuilder: (scrollController) {
                                return Padding(
                                  padding: const EdgeInsets.only(top: 10.0, left: 6.0, right: 6.0),
                                  child: Obx(() {
                                    if (controller.sitesList.isEmpty) {
                                      return const Center(child: Text('No sites available.'));
                                    }
                                    return ListView.builder(
                                      scrollDirection: Axis.horizontal, // Enable horizontal scrolling
                                      controller: scrollController, // Controller for the list
                                      itemCount: controller.sitesList.length,
                                      itemBuilder: (context, index) {
                                        final site = controller.sitesList[index];
                                        return Card(
                                          margin: const EdgeInsets.all(8),
                                          child: Container(
                                            width: 150, // Set width of the card
                                            height: 130, // Set height of the card
                                            padding: const EdgeInsets.all(8), // Padding inside the card
                                            child: Column(
                                              children: [
                                                ClipRRect(
                                                  borderRadius: BorderRadius.circular(10),
                                                  child: site.imageUrl?.isNotEmpty == true
                                                      ? Image.network(
                                                    site.imageUrl!,
                                                    width: 130, // Image width
                                                    height: 100, // Image height
                                                    fit: BoxFit.cover,
                                                  )
                                                      : Container(
                                                    width: 130,
                                                    height: 100,
                                                    color: Colors.grey,
                                                    child: const Icon(
                                                      Icons.image,
                                                      color: Colors.white,
                                                      size: 60,
                                                    ),
                                                  ),
                                                ),
                                                const SizedBox(height: 8),
                                                Text(
                                                  site.name ?? 'Unknown Site',
                                                  style: AppTypography.titleMedium.copyWith(fontWeight: FontWeight.bold),
                                                  maxLines: 1,
                                                  overflow: TextOverflow.ellipsis,
                                                ),
                                                Text(
                                                  site.description ?? 'Unknown Site',
                                                  style: AppTypography.labelMedium.copyWith(color: AppColors.greyColor),
                                                  maxLines: 1,
                                                  overflow: TextOverflow.ellipsis,
                                                ),
                                                const Icon(
                                                  Icons.location_on,
                                                  color: AppColors.greyColor,
                                                  size: 18,
                                                ),
                                                const SizedBox(width: 4),
                                                Expanded(
                                                  child: Text(
                                                    site.address,
                                                    style: AppTypography.labelMedium.copyWith(color: AppColors.greyColor),
                                                    maxLines: 1,
                                                    overflow: TextOverflow.ellipsis,
                                                  ),
                                                ),
                                              ],
                                            ),
                                          ),
                                        );
                                      },
                                    );
                                  }),
                                );
                              },
                              isDraggable: true, // Enable vertical dragging
                            ),